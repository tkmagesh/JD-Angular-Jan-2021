RIA
    Rich Internet Applications
    Applications - Dynamic
    More Interactive
    Client Driven (Run in the browser)
    User Experience (UX)

CWA
    Classical Web Application
    Server Driven
    The complete application (with all the below layers are in the server)

Application Layers

    User Interface (UI Layer)
        Controllers
        Views
        Models

    Domain Layer (Business Logic Layer)
    Repository Layer (Data Access Layer)


PoEAA (Patterns of Enterprise Application Architecture)

Browser
    UI (HTML DOM CSS) (UI Frameworks like Angular, React, Vue, Backbone)
    Infrastructure (HTML5) (caniuse.com)
        Storage
            Local Storage`
            Session Storage
            IndexedDB
        Server Sent Events
        Web Sockets
        Web RTC
        Device

Maintainability (Effort needed to make changes)
    Fix bugs
    add new features
    remove dead code
    optimize existing functionality

Separation of Concerns

    tight coupling  (the entities are related in such a way that a change in one leads to a change in the other)
    loose coupling (changes in one entity DOES NOT force a change in the other)


Angular Building Blocks
    1. Component
        - encapsulates Presentation + User Interaction + Data

    2. Pipe
        - data transformation logic for Presentation

    3. Directive
        - low level DOM manipulation

    4. Service
        - Non UI responsibilities

    5. Module
        - Register all the other application entities
        - There should be a minimum of 1 module in an application
        - application bootstrap happens through a module
        - Dependency Injection is taken care

ES6
    1. let
    2. const
    3. Array destructuring
    4. Rest operator (Array)
    5. Spread operator (Array)
    6. Object destructuring
    7. Rest operator (Object)
    8. Spread operator (Object)
    9. Object construction
    10. default arguments
    11. arrow functions
    12. template strings
    13. class (tomorrow)

    http://es6-features.org

TypeScript
    - Superset of javascript
    - plain javascript is VALID typescript
    - www.typescriptlang.org

Javascript is loosely typed

class Employee{
    public void M(){
        int x = 10;
        .
        .
        x = "abc"
    }
}


var x : number = 10;
function add(x : number, y : number) : number {
    return x + y;
}

add("100",200)

class Employee{

}

interfaces
enum
generics

var abc = 100;

    |
    V
    tsc
    |
    |
    V

function Employee{

}
var x  = 10;
function add(x , y )  {
    return x + y;
}

Assignment
    Study the following methods of 'Array' in javascript
        - map, reduce, filter, forEach


Angular CLI
Node.js (to provide the runtime for angular cli)

JS Module Systems
    AMD (Asynchronous Module Definition)
    CommonJS (used in node.js)
    ES6 modules

ES6 Modules
    - Everything defined in a JS/TS file is considered private by default
    - Anything to be exposed publicly has to be explicity 'exported'
    - Anything to be used from another module (ES6) has to be explicity 'imported'
      